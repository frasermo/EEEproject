/*
 * FRASER MONTANDON
 * LOCK-IN FIR FILTER
 * GENERATED WITH CCS2000 AND MATLAB SIMULINK
 */


#ifndef RTW_HEADER_final_lockin_h_
#define RTW_HEADER_final_lockin_h_
#include <math.h>
#include <string.h>
#include <float.h>
#include <stddef.h>
#ifndef final_lockin_COMMON_INCLUDES_
#define final_lockin_COMMON_INCLUDES_
#include "rtwtypes.h"
#include "rtw_extmode.h"
#include "sysran_types.h"
#include "dt_info.h"
#include "ext_work.h"
#include "c2000BoardSupport.h"
#include "F2837xD_device.h"
#include "F2837xD_Examples.h"
#include "MW_c2000DAC.h"
#endif                                 /* final_lockin_COMMON_INCLUDES_ */

#include "final_lockin_types.h"

/* Shared type includes */
#include "multiword_types.h"
#include "MW_target_hardware_resources.h"

/* Macros for accessing real-time model data structure */
#ifndef rtmGetFinalTime
#define rtmGetFinalTime(rtm)           ((rtm)->Timing.tFinal)
#endif

#ifndef rtmGetRTWExtModeInfo
#define rtmGetRTWExtModeInfo(rtm)      ((rtm)->extModeInfo)
#endif

#ifndef rtmGetErrorStatus
#define rtmGetErrorStatus(rtm)         ((rtm)->errorStatus)
#endif

#ifndef rtmSetErrorStatus
#define rtmSetErrorStatus(rtm, val)    ((rtm)->errorStatus = (val))
#endif

#ifndef rtmStepTask
#define rtmStepTask(rtm, idx)          ((rtm)->Timing.TaskCounters.TID[(idx)] == 0)
#endif

#ifndef rtmGetStopRequested
#define rtmGetStopRequested(rtm)       ((rtm)->Timing.stopRequestedFlag)
#endif

#ifndef rtmSetStopRequested
#define rtmSetStopRequested(rtm, val)  ((rtm)->Timing.stopRequestedFlag = (val))
#endif

#ifndef rtmGetStopRequestedPtr
#define rtmGetStopRequestedPtr(rtm)    (&((rtm)->Timing.stopRequestedFlag))
#endif

#ifndef rtmGetT
#define rtmGetT(rtm)                   ((rtm)->Timing.taskTime0)
#endif

#ifndef rtmGetTFinal
#define rtmGetTFinal(rtm)              ((rtm)->Timing.tFinal)
#endif

#ifndef rtmGetTPtr
#define rtmGetTPtr(rtm)                (&(rtm)->Timing.taskTime0)
#endif

#ifndef rtmTaskCounter
#define rtmTaskCounter(rtm, idx)       ((rtm)->Timing.TaskCounters.TID[(idx)])
#endif

extern void configureIXbar(void);

/* Block signals (default storage) */
typedef struct {
  real_T ADCin;                        /* '<Root>/ADCin' */
  real_T biasadjustment3;              /* '<Root>/biasadjustment3' */
  real_T DigitalFilter;                /* '<S1>/Digital Filter' */
  real_T DigitalFilter_j;              /* '<S2>/Digital Filter' */
  real_T decimator_inphase;            /* '<Root>/decimator_inphase' */
  real_T DigitalFilter_n;              /* '<S3>/Digital Filter' */
  real_T decimatorquadrature;          /* '<Root>/decimatorquadrature' */
  real_T DigitalFilter_p;              /* '<S4>/Digital Filter' */
  real_T magnitude;                    /* '<Root>/magnitude' */
  real_T gainscalingVout;              /* '<Root>/gainscalingVout' */
  real_T phase;                        /* '<Root>/phase' */
} B_final_lockin_T;

/* Block states (default storage) for system '<Root>' */
typedef struct {
  real_T DigitalFilter_states[75];     /* '<S1>/Digital Filter' */
  real_T decimator_inphase_Sums[240];  /* '<Root>/decimator_inphase' */
  real_T decimator_inphase_StatesBuff[23];/* '<Root>/decimator_inphase' */
  real_T decimator_inphase_OutBuff;    /* '<Root>/decimator_inphase' */
  real_T DigitalFilter_states_a[75];   /* '<S2>/Digital Filter' */
  real_T decimatorquadrature_Sums[240];/* '<Root>/decimatorquadrature' */
  real_T decimatorquadrature_StatesBuff[23];/* '<Root>/decimatorquadrature' */
  real_T decimatorquadrature_OutBuff;  /* '<Root>/decimatorquadrature' */
  real_T DigitalFilter_states_d[324];  /* '<S3>/Digital Filter' */
  real_T DigitalFilter_states_g[324];  /* '<S4>/Digital Filter' */
  int32_T decimator_inphase_PhaseIdx;  /* '<Root>/decimator_inphase' */
  int32_T decimatorquadrature_PhaseIdx;/* '<Root>/decimatorquadrature' */
  uint16_T cosinusoid_TableIdx;        /* '<Root>/cosinusoid' */
  uint16_T sinusoid_TableIdx;          /* '<Root>/sinusoid' */
} DW_final_lockin_T;

/* Constant parameters (default storage) */
typedef struct {
  /* Computed Parameter: cosinusoid_Values_SineTable
   * Referenced by: '<Root>/cosinusoid'
   */
  real_T cosinusoid_Values_SineTable[80];

  /* Computed Parameter: sinusoid_Values_SineTable
   * Referenced by: '<Root>/sinusoid'
   */
  real_T sinusoid_Values_SineTable[80];
} ConstP_final_lockin_T;

/* Parameters (default storage) */
struct P_final_lockin_T_ {
  real_T bias_Value;                   /* Expression: 2047.5
                                        * Referenced by: '<Root>/bias'
                                        */
  real_T DigitalFilter_InitialStates;  /* Expression: 0
                                        * Referenced by: '<S1>/Digital Filter'
                                        */
  real_T DigitalFilter_Coefficients[76];
  /* Expression: [1.00640064792985774e-05 1.84761323254134515e-05 3.47481235989643966e-05 5.97390028706357141e-05 9.63707963516058342e-05 0.00014810329845645748 0.000218936679569615349 0.000313355228003890207 0.000436287100971003848 0.000593022724064002564 0.00078908056061367045 0.00103005648318776942 0.00132146146355853478 0.00166851235592413698 0.00207590096848642072 0.00254756851480360778 0.00308647618271437867 0.00369436683982004221 0.00437154878302647553 0.00511671443228902106 0.00592679176673763242 0.00679683815362249442 0.00771999269122452137 0.00868748853122975478 0.00968873045563457824 0.0107114433693491651 0.011741885737509011 0.012765119790681333 0.0137653407501932105 0.0147262571305074152 0.0156315024382424478 0.0164650648992030815 0.0172117270666684169 0.0178574970467587774 0.0183900126366865514 0.0187989059076820175 0.0190761136341624851 0.0192161189099017346 0.0192161189099017346 0.0190761136341624851 0.0187989059076820175 0.0183900126366865514 0.0178574970467587774 0.0172117270666684169 0.0164650648992030815 0.0156315024382424478 0.0147262571305074152 0.0137653407501932105 0.012765119790681333 0.011741885737509011 0.0107114433693491651 0.00968873045563457824 0.00868748853122975478 0.00771999269122452137 0.00679683815362249442 0.00592679176673763242 0.00511671443228902106 0.00437154878302647553 0.00369436683982004221 0.00308647618271437867 0.00254756851480360778 0.00207590096848642072 0.00166851235592413698 0.00132146146355853478 0.00103005648318776942 0.00078908056061367045 0.000593022724064002564 0.000436287100971003848 0.000313355228003890207 0.000218936679569615349 0.00014810329845645748 9.63707963516058342e-05 5.97390028706357141e-05 3.47481235989643966e-05 1.84761323254134515e-05 1.00640064792985774e-05]
   * Referenced by: '<S1>/Digital Filter'
   */
  real_T decimator_inphase_FILT[240];  /* Expression: a.h
                                        * Referenced by: '<Root>/decimator_inphase'
                                        */
  real_T DigitalFilter_InitialStates_o;/* Expression: 0
                                        * Referenced by: '<S2>/Digital Filter'
                                        */
  real_T DigitalFilter_Coefficients_h[76];
  /* Expression: [1.00640064792985774e-05 1.84761323254134515e-05 3.47481235989643966e-05 5.97390028706357141e-05 9.63707963516058342e-05 0.00014810329845645748 0.000218936679569615349 0.000313355228003890207 0.000436287100971003848 0.000593022724064002564 0.00078908056061367045 0.00103005648318776942 0.00132146146355853478 0.00166851235592413698 0.00207590096848642072 0.00254756851480360778 0.00308647618271437867 0.00369436683982004221 0.00437154878302647553 0.00511671443228902106 0.00592679176673763242 0.00679683815362249442 0.00771999269122452137 0.00868748853122975478 0.00968873045563457824 0.0107114433693491651 0.011741885737509011 0.012765119790681333 0.0137653407501932105 0.0147262571305074152 0.0156315024382424478 0.0164650648992030815 0.0172117270666684169 0.0178574970467587774 0.0183900126366865514 0.0187989059076820175 0.0190761136341624851 0.0192161189099017346 0.0192161189099017346 0.0190761136341624851 0.0187989059076820175 0.0183900126366865514 0.0178574970467587774 0.0172117270666684169 0.0164650648992030815 0.0156315024382424478 0.0147262571305074152 0.0137653407501932105 0.012765119790681333 0.011741885737509011 0.0107114433693491651 0.00968873045563457824 0.00868748853122975478 0.00771999269122452137 0.00679683815362249442 0.00592679176673763242 0.00511671443228902106 0.00437154878302647553 0.00369436683982004221 0.00308647618271437867 0.00254756851480360778 0.00207590096848642072 0.00166851235592413698 0.00132146146355853478 0.00103005648318776942 0.00078908056061367045 0.000593022724064002564 0.000436287100971003848 0.000313355228003890207 0.000218936679569615349 0.00014810329845645748 9.63707963516058342e-05 5.97390028706357141e-05 3.47481235989643966e-05 1.84761323254134515e-05 1.00640064792985774e-05]
   * Referenced by: '<S2>/Digital Filter'
   */
  real_T decimatorquadrature_FILT[240];/* Expression: a.h
                                        * Referenced by: '<Root>/decimatorquadrature'
                                        */
  real_T Constant2_Value;              /* Expression: 1241
                                        * Referenced by: '<Root>/Constant2'
                                        */
  real_T DigitalFilter_InitialStates_b;/* Expression: 0
                                        * Referenced by: '<S3>/Digital Filter'
                                        */
  real_T DigitalFilter_Coefficients_g[325];
  /* Expression: [2.97488623622256017e-06 1.48625162772509666e-06 1.85475562131144096e-06 2.28106018606335833e-06 2.77176581142679623e-06 3.33258610866313455e-06 3.97107776758917018e-06 4.69424599029646752e-06 5.51097200765028926e-06 6.42945052906526942e-06 7.45944688147447675e-06 8.60973212815666678e-06 9.89073600806467031e-06 1.13121122681302505e-05 1.2885839319675045e-05 1.46233003430959683e-05 1.65381228992802843e-05 1.86422572685778897e-05 2.09495795509013073e-05 2.34725315707869827e-05 2.62274698494144526e-05 2.92297033336494599e-05 3.24974247093643068e-05 3.60438940440040926e-05 3.98865288051098731e-05 4.4042537692560428e-05 4.85373427835611451e-05 5.33806448765439229e-05 5.85955169896906314e-05 6.42067501670076429e-05 7.02270966853817233e-05 7.66852336799074845e-05 8.35982424193296815e-05 9.09921948055308498e-05 9.88876029699652212e-05 0.000107309909261262405 0.000116281343487341265 0.00012582790295434076 0.000135973410357326767 0.000146744402205866055 0.000158165327873949034 0.000170262879604989178 0.0001830625265906977 0.000196591988681692561 0.000210877508307914986 0.000225946513209582126 0.000241825045728722468 0.000258541138624673471 0.000276121896659254327 0.000294595067672290929 0.00031398639368671532 0.000334323933886142711 0.000355634552094719893 0.00037794480075578217 0.000401279359127115949 0.000425667525888084506 0.000451131493024303255 0.000477698658443416956 0.000505392383567436509 0.000534236893835309044 0.00056425561416901355 0.000595471074241347531 0.000627905025405981788 0.000661578132537116821 0.000696510231782135163 0.000732720385856225516 0.0007702264369481047 0.000809045042469866589 0.000849191393142055269 0.000890679786286422163 0.00093352305932738514 0.000977732801488927347 0.00102331859951771548 0.0010702890223058233 0.00111865085158240648 0.00116840945467102135 0.00121956756679286607 0.00127212722689409819 0.00132608825928162742 0.00138144858124360334 0.00143820339885815081 0.00149634755906059218 0.0015558723198027106 0.00161676752502067284 0.0016790215296644817 0.00174261890371367857 0.00180754376544454694 0.00187377672711183164 0.00194129716605555931 0.00201008150485258458 0.00208010415634648756 0.00215133718599447039 0.0022237504541094081 0.00229731148541732462 0.00237198537893237339 0.00244773510272181926 0.00252452126721778745 0.00260230234412700935 0.00268103418822663751 0.00276067072910042869 0.0028411636576644592 0.00292246269397442894 0.00300451485043033272 0.00308726546415894051 0.00317065789398032934 0.0032546333535858965 0.00333913107831058801 0.00342408863606215785 0.00350944170038065568 0.00359512380501351547 0.00368106781807096568 0.00376720395014237298 0.0038534615705814357 0.00393976847942889216 0.00402605096391224666 0.00411223456231244854 0.00419824297909787095 0.00428399966573643747 0.00436942655748902113 0.00445444530969479197 0.00453897629567490916 0.00462293983324133396 0.00470625541148344661 0.00478884266528680196 0.0048706204714547563 0.00495150793366430468 0.00503142398164144362 0.00511028807824717105 0.00518801956138849329 0.00526453837643258045 0.00533976503811615932 0.00541362060662672982 0.00548602699933814324 0.00555690713964765003 0.00562618491535349288 0.00569378536060424767 0.00575963492842742827 0.00582366160373594139 0.00588579441088929196 0.00594596486792317667 0.00600410545324831305 0.00606015145253453735 0.00611403921819937083 0.00616570800196579449 0.00621509883283838209 0.00626215547744234709 0.00630682382173525149 0.00634905249546184342 0.00638879254807642703 0.00642599803261043739 0.00646062563215363608 0.00649263496050241605 0.00652198851557283209 0.00654865196353389585 0.00657259393492788148 0.00659378620206707827 0.00661220381572791283 0.00662782501898407424 0.00664063127600354741 0.00665060759922355468 0.00665774189066509117 0.006662025931889041 0.00666345436093644227 0.006662025931889041 0.00665774189066509117 0.00665060759922355468 0.00664063127600354741 0.00662782501898407424 0.00661220381572791283 0.00659378620206707827 0.00657259393492788148 0.00654865196353389585 0.00652198851557283209 0.00649263496050241605 0.00646062563215363608 0.00642599803261043739 0.00638879254807642703 0.00634905249546184342 0.00630682382173525149 0.00626215547744234709 0.00621509883283838209 0.00616570800196579449 0.00611403921819937083 0.00606015145253453735 0.00600410545324831305 0.00594596486792317667 0.00588579441088929196 0.00582366160373594139 0.00575963492842742827 0.00569378536060424767 0.00562618491535349288 0.00555690713964765003 0.00548602699933814324 0.00541362060662672982 0.00533976503811615932 0.00526453837643258045 0.00518801956138849329 0.00511028807824717105 0.00503142398164144362 0.00495150793366430468 0.0048706204714547563 0.00478884266528680196 0.00470625541148344661 0.00462293983324133396 0.00453897629567490916 0.00445444530969479197 0.00436942655748902113 0.00428399966573643747 0.00419824297909787095 0.00411223456231244854 0.00402605096391224666 0.00393976847942889216 0.0038534615705814357 0.00376720395014237298 0.00368106781807096568 0.00359512380501351547 0.00350944170038065568 0.00342408863606215785 0.00333913107831058801 0.0032546333535858965 0.00317065789398032934 0.00308726546415894051 0.00300451485043033272 0.00292246269397442894 0.0028411636576644592 0.00276067072910042869 0.00268103418822663751 0.00260230234412700935 0.00252452126721778745 0.00244773510272181926 0.00237198537893237339 0.00229731148541732462 0.0022237504541094081 0.00215133718599447039 0.00208010415634648756 0.00201008150485258458 0.00194129716605555931 0.00187377672711183164 0.00180754376544454694 0.00174261890371367857 0.0016790215296644817 0.00161676752502067284 0.0015558723198027106 0.00149634755906059218 0.00143820339885815081 0.00138144858124360334 0.00132608825928162742 0.00127212722689409819 0.00121956756679286607 0.00116840945467102135 0.00111865085158240648 0.0010702890223058233 0.00102331859951771548 0.000977732801488927347 0.00093352305932738514 0.000890679786286422163 0.000849191393142055269 0.000809045042469866589 0.0007702264369481047 0.000732720385856225516 0.000696510231782135163 0.000661578132537116821 0.000627905025405981788 0.000595471074241347531 0.00056425561416901355 0.000534236893835309044 0.000505392383567436509 0.000477698658443416956 0.000451131493024303255 0.000425667525888084506 0.000401279359127115949 0.00037794480075578217 0.000355634552094719893 0.000334323933886142711 0.00031398639368671532 0.000294595067672290929 0.000276121896659254327 0.000258541138624673471 0.000241825045728722468 0.000225946513209582126 0.000210877508307914986 0.000196591988681692561 0.0001830625265906977 0.000170262879604989178 0.000158165327873949034 0.000146744402205866055 0.000135973410357326767 0.00012582790295434076 0.000116281343487341265 0.000107309909261262405 9.88876029699652212e-05 9.09921948055308498e-05 8.35982424193296815e-05 7.66852336799074845e-05 7.02270966853817233e-05 6.42067501670076429e-05 5.85955169896906314e-05 5.33806448765439229e-05 4.85373427835611451e-05 4.4042537692560428e-05 3.98865288051098731e-05 3.60438940440040926e-05 3.24974247093643068e-05 2.92297033336494599e-05 2.62274698494144526e-05 2.34725315707869827e-05 2.09495795509013073e-05 1.86422572685778897e-05 1.65381228992802843e-05 1.46233003430959683e-05 1.2885839319675045e-05 1.13121122681302505e-05 9.89073600806467031e-06 8.60973212815666678e-06 7.45944688147447675e-06 6.42945052906526942e-06 5.51097200765028926e-06 4.69424599029646752e-06 3.97107776758917018e-06 3.33258610866313455e-06 2.77176581142679623e-06 2.28106018606335833e-06 1.85475562131144096e-06 1.48625162772509666e-06 2.97488623622256017e-06]
   * Referenced by: '<S3>/Digital Filter'
   */
  real_T DigitalFilter_InitialStates_k;/* Expression: 0
                                        * Referenced by: '<S4>/Digital Filter'
                                        */
  real_T DigitalFilter_Coefficients_c[325];
  /* Expression: [2.97488623622256017e-06 1.48625162772509666e-06 1.85475562131144096e-06 2.28106018606335833e-06 2.77176581142679623e-06 3.33258610866313455e-06 3.97107776758917018e-06 4.69424599029646752e-06 5.51097200765028926e-06 6.42945052906526942e-06 7.45944688147447675e-06 8.60973212815666678e-06 9.89073600806467031e-06 1.13121122681302505e-05 1.2885839319675045e-05 1.46233003430959683e-05 1.65381228992802843e-05 1.86422572685778897e-05 2.09495795509013073e-05 2.34725315707869827e-05 2.62274698494144526e-05 2.92297033336494599e-05 3.24974247093643068e-05 3.60438940440040926e-05 3.98865288051098731e-05 4.4042537692560428e-05 4.85373427835611451e-05 5.33806448765439229e-05 5.85955169896906314e-05 6.42067501670076429e-05 7.02270966853817233e-05 7.66852336799074845e-05 8.35982424193296815e-05 9.09921948055308498e-05 9.88876029699652212e-05 0.000107309909261262405 0.000116281343487341265 0.00012582790295434076 0.000135973410357326767 0.000146744402205866055 0.000158165327873949034 0.000170262879604989178 0.0001830625265906977 0.000196591988681692561 0.000210877508307914986 0.000225946513209582126 0.000241825045728722468 0.000258541138624673471 0.000276121896659254327 0.000294595067672290929 0.00031398639368671532 0.000334323933886142711 0.000355634552094719893 0.00037794480075578217 0.000401279359127115949 0.000425667525888084506 0.000451131493024303255 0.000477698658443416956 0.000505392383567436509 0.000534236893835309044 0.00056425561416901355 0.000595471074241347531 0.000627905025405981788 0.000661578132537116821 0.000696510231782135163 0.000732720385856225516 0.0007702264369481047 0.000809045042469866589 0.000849191393142055269 0.000890679786286422163 0.00093352305932738514 0.000977732801488927347 0.00102331859951771548 0.0010702890223058233 0.00111865085158240648 0.00116840945467102135 0.00121956756679286607 0.00127212722689409819 0.00132608825928162742 0.00138144858124360334 0.00143820339885815081 0.00149634755906059218 0.0015558723198027106 0.00161676752502067284 0.0016790215296644817 0.00174261890371367857 0.00180754376544454694 0.00187377672711183164 0.00194129716605555931 0.00201008150485258458 0.00208010415634648756 0.00215133718599447039 0.0022237504541094081 0.00229731148541732462 0.00237198537893237339 0.00244773510272181926 0.00252452126721778745 0.00260230234412700935 0.00268103418822663751 0.00276067072910042869 0.0028411636576644592 0.00292246269397442894 0.00300451485043033272 0.00308726546415894051 0.00317065789398032934 0.0032546333535858965 0.00333913107831058801 0.00342408863606215785 0.00350944170038065568 0.00359512380501351547 0.00368106781807096568 0.00376720395014237298 0.0038534615705814357 0.00393976847942889216 0.00402605096391224666 0.00411223456231244854 0.00419824297909787095 0.00428399966573643747 0.00436942655748902113 0.00445444530969479197 0.00453897629567490916 0.00462293983324133396 0.00470625541148344661 0.00478884266528680196 0.0048706204714547563 0.00495150793366430468 0.00503142398164144362 0.00511028807824717105 0.00518801956138849329 0.00526453837643258045 0.00533976503811615932 0.00541362060662672982 0.00548602699933814324 0.00555690713964765003 0.00562618491535349288 0.00569378536060424767 0.00575963492842742827 0.00582366160373594139 0.00588579441088929196 0.00594596486792317667 0.00600410545324831305 0.00606015145253453735 0.00611403921819937083 0.00616570800196579449 0.00621509883283838209 0.00626215547744234709 0.00630682382173525149 0.00634905249546184342 0.00638879254807642703 0.00642599803261043739 0.00646062563215363608 0.00649263496050241605 0.00652198851557283209 0.00654865196353389585 0.00657259393492788148 0.00659378620206707827 0.00661220381572791283 0.00662782501898407424 0.00664063127600354741 0.00665060759922355468 0.00665774189066509117 0.006662025931889041 0.00666345436093644227 0.006662025931889041 0.00665774189066509117 0.00665060759922355468 0.00664063127600354741 0.00662782501898407424 0.00661220381572791283 0.00659378620206707827 0.00657259393492788148 0.00654865196353389585 0.00652198851557283209 0.00649263496050241605 0.00646062563215363608 0.00642599803261043739 0.00638879254807642703 0.00634905249546184342 0.00630682382173525149 0.00626215547744234709 0.00621509883283838209 0.00616570800196579449 0.00611403921819937083 0.00606015145253453735 0.00600410545324831305 0.00594596486792317667 0.00588579441088929196 0.00582366160373594139 0.00575963492842742827 0.00569378536060424767 0.00562618491535349288 0.00555690713964765003 0.00548602699933814324 0.00541362060662672982 0.00533976503811615932 0.00526453837643258045 0.00518801956138849329 0.00511028807824717105 0.00503142398164144362 0.00495150793366430468 0.0048706204714547563 0.00478884266528680196 0.00470625541148344661 0.00462293983324133396 0.00453897629567490916 0.00445444530969479197 0.00436942655748902113 0.00428399966573643747 0.00419824297909787095 0.00411223456231244854 0.00402605096391224666 0.00393976847942889216 0.0038534615705814357 0.00376720395014237298 0.00368106781807096568 0.00359512380501351547 0.00350944170038065568 0.00342408863606215785 0.00333913107831058801 0.0032546333535858965 0.00317065789398032934 0.00308726546415894051 0.00300451485043033272 0.00292246269397442894 0.0028411636576644592 0.00276067072910042869 0.00268103418822663751 0.00260230234412700935 0.00252452126721778745 0.00244773510272181926 0.00237198537893237339 0.00229731148541732462 0.0022237504541094081 0.00215133718599447039 0.00208010415634648756 0.00201008150485258458 0.00194129716605555931 0.00187377672711183164 0.00180754376544454694 0.00174261890371367857 0.0016790215296644817 0.00161676752502067284 0.0015558723198027106 0.00149634755906059218 0.00143820339885815081 0.00138144858124360334 0.00132608825928162742 0.00127212722689409819 0.00121956756679286607 0.00116840945467102135 0.00111865085158240648 0.0010702890223058233 0.00102331859951771548 0.000977732801488927347 0.00093352305932738514 0.000890679786286422163 0.000849191393142055269 0.000809045042469866589 0.0007702264369481047 0.000732720385856225516 0.000696510231782135163 0.000661578132537116821 0.000627905025405981788 0.000595471074241347531 0.00056425561416901355 0.000534236893835309044 0.000505392383567436509 0.000477698658443416956 0.000451131493024303255 0.000425667525888084506 0.000401279359127115949 0.00037794480075578217 0.000355634552094719893 0.000334323933886142711 0.00031398639368671532 0.000294595067672290929 0.000276121896659254327 0.000258541138624673471 0.000241825045728722468 0.000225946513209582126 0.000210877508307914986 0.000196591988681692561 0.0001830625265906977 0.000170262879604989178 0.000158165327873949034 0.000146744402205866055 0.000135973410357326767 0.00012582790295434076 0.000116281343487341265 0.000107309909261262405 9.88876029699652212e-05 9.09921948055308498e-05 8.35982424193296815e-05 7.66852336799074845e-05 7.02270966853817233e-05 6.42067501670076429e-05 5.85955169896906314e-05 5.33806448765439229e-05 4.85373427835611451e-05 4.4042537692560428e-05 3.98865288051098731e-05 3.60438940440040926e-05 3.24974247093643068e-05 2.92297033336494599e-05 2.62274698494144526e-05 2.34725315707869827e-05 2.09495795509013073e-05 1.86422572685778897e-05 1.65381228992802843e-05 1.46233003430959683e-05 1.2885839319675045e-05 1.13121122681302505e-05 9.89073600806467031e-06 8.60973212815666678e-06 7.45944688147447675e-06 6.42945052906526942e-06 5.51097200765028926e-06 4.69424599029646752e-06 3.97107776758917018e-06 3.33258610866313455e-06 2.77176581142679623e-06 2.28106018606335833e-06 1.85475562131144096e-06 1.48625162772509666e-06 2.97488623622256017e-06]
   * Referenced by: '<S4>/Digital Filter'
   */
};

/* Real-time Model Data Structure */
struct tag_RTM_final_lockin_T {
  const char_T *errorStatus;
  RTWExtModeInfo *extModeInfo;

  /*
   * Sizes:
   * The following substructure contains sizes information
   * for many of the model attributes such as inputs, outputs,
   * dwork, sample times, etc.
   */
  struct {
    uint32_T checksums[4];
  } Sizes;

  /*
   * SpecialInfo:
   * The following substructure contains special information
   * related to other components that are dependent on RTW.
   */
  struct {
    const void *mappingInfo;
  } SpecialInfo;

  /*
   * Timing:
   * The following substructure contains information regarding
   * the timing information for the model.
   */
  struct {
    time_T taskTime0;
    uint32_T clockTick0;
    uint32_T clockTickH0;
    time_T stepSize0;
    uint32_T clockTick1;
    struct {
      uint8_T TID[2];
    } TaskCounters;

    struct {
      boolean_T TID0_1;
    } RateInteraction;

    time_T tFinal;
    boolean_T stopRequestedFlag;
  } Timing;
};

/* Block parameters (default storage) */
extern P_final_lockin_T final_lockin_P;

/* Block signals (default storage) */
extern B_final_lockin_T final_lockin_B;

/* Block states (default storage) */
extern DW_final_lockin_T final_lockin_DW;

/* Constant parameters (default storage) */
extern const ConstP_final_lockin_T final_lockin_ConstP;

/* External function called from main */
extern void final_lockin_SetEventsForThisBaseStep(boolean_T *eventFlags);

/* Model entry point functions */
extern void final_lockin_SetEventsForThisBaseStep(boolean_T *eventFlags);
extern void final_lockin_initialize(void);
extern void final_lockin_step0(void);
extern void final_lockin_step1(void);
extern void final_lockin_terminate(void);

/* Real-time Model object */
extern RT_MODEL_final_lockin_T *const final_lockin_M;
extern volatile boolean_T stopRequested;
extern volatile boolean_T runModel;

/*-
 * These blocks were eliminated from the model due to optimizations:
 *
 * Block '<S5>/Check Signal Attributes' : Unused code path elimination
 * Block '<S6>/Check Signal Attributes' : Unused code path elimination
 * Block '<S7>/Check Signal Attributes' : Unused code path elimination
 * Block '<S8>/Check Signal Attributes' : Unused code path elimination
 */

/*-
 * The generated code includes comments that allow you to trace directly
 * back to the appropriate location in the model.  The basic format
 * is <system>/block_name, where system is the system number (uniquely
 * assigned by Simulink) and block_name is the name of the block.
 *
 * Use the MATLAB hilite_system command to trace the generated code back
 * to the model.  For example,
 *
 * hilite_system('<S3>')    - opens system 3
 * hilite_system('<S3>/Kp') - opens and selects block Kp which resides in S3
 *
 * Here is the system hierarchy for this model
 *
 * '<Root>' : 'final_lockin'
 * '<S1>'   : 'final_lockin/FIR1inphase'
 * '<S2>'   : 'final_lockin/FIR1quadrature'
 * '<S3>'   : 'final_lockin/FIR2inphase'
 * '<S4>'   : 'final_lockin/FIR2quadrature'
 * '<S5>'   : 'final_lockin/FIR1inphase/Check Signal Attributes'
 * '<S6>'   : 'final_lockin/FIR1quadrature/Check Signal Attributes'
 * '<S7>'   : 'final_lockin/FIR2inphase/Check Signal Attributes'
 * '<S8>'   : 'final_lockin/FIR2quadrature/Check Signal Attributes'
 */
#endif                                 /* RTW_HEADER_final_lockin_h_ */

/*
 * File trailer for generated code.
 *
 * [EOF]
 */
